name: Send Codacy issues to GitHub as issues

on:
  push:
    branches: [ test/actions ]

jobs:
  send-issues-to-github:
    runs-on: ubuntu-latest
    env:
      CODACY_USERNAME: maiconrp
      CODACY_API_TOKEN: ${{secrets.CODACY_API_KEY}}
      GITHUB_REPO_OWNER: maiconrp
      GITHUB_REPO_NAME: adgestao
      GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      ISSUES_FILTER: >
        project: maiconrp/adgestao
        patterns: ['pattern1', 'pattern2']
        severities: ['error', 'warning', 'info']
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Send issues to GitHub
      run: |
        # Importa as bibliotecas necessárias
        import os
        import requests
        import json

        # Define o padrão de corpo da issue
        issue_body_pattern = '''**Arquivo:** `{{issue.file}}`
          \n
          **Linha:** `{{issue.line}}`
          \n
          **Trecho de código:**\n```\n{{issue.code}}\n```\n
          **Descrição:**\n{{issue.description}}\n
          \nVeja mais detalhes em: `{{issue.url}}`'''

        # Define o filtro de issues para buscar no Codacy
        issues_filter = os.getenv('ISSUES_FILTER')

        # Obtém as informações das issues do Codacy que correspondem ao filtro definido
        codacy_api_url = 'https://api.codacy.com/2.0/issues/search'
        response = requests.post(
            codacy_api_url,
            auth=(os.getenv('CODACY_USERNAME'), os.getenv('CODACY_API_TOKEN')),
            headers={'Content-Type': 'application/json'},
            data=json.dumps({'filters': issues_filter})
        )

        # Obtém as issues do resultado da busca e cria uma nova issue no GitHub para cada uma
        issues = response.json().get('results', [])
        github_api_url = f'https://api.github.com/repos/{os.getenv('GITHUB_REPO_OWNER')}/{os.getenv('GITHUB_REPO_NAME')}/issues'
        for issue in issues:
            # Define o título da issue
            issue_title = f"#{issue['number']} - [Codacy/{issue['severity']}] - {issue['message']}"

            # Define os parâmetros para criar uma nova issue no GitHub
            new_issue = {
                'title': issue_title,
                'body': issue_body_pattern.format(issue=issue),
            }

            # Cria a nova issue no GitHub
            response = requests.post(
                github_api_url,
                auth=(os.getenv('GITHUB_API_TOKEN'), ''),
                headers={'Content-Type': 'application/json'},
                data=json.dumps(new_issue)
            )

            # Imprime o status da resposta HTTP
            print(response.status_code)
            break