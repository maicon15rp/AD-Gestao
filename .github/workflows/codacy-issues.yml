name: Send Codacy issues to GitHub issues

on:
  push:
    branches: [ test/actions ]

jobs:
  send-issues-to-github:
    runs-on: ubuntu-latest
    env:
      CODACY_USERNAME: maiconrp
      CODACY_API_TOKEN: ${{secrets.CODACY_API_KEY}}
      GITHUB_REPO_OWNER: maiconrp
      GITHUB_REPO_NAME: adgestao
      GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      ISSUES_FILTER: >
        project: maiconrp/adgestao
        patterns: ['pattern1', 'pattern2']
        severities: ['error', 'warning', 'info']
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Send issues to GitHub
      run: |
        # Define o padrão de corpo da issue
        issue_body_pattern="**Arquivo:** \`{{issue.file}}\`\n\n**Linha:** \`{{issue.line}}\`\n\n**Trecho de código:**\n\`\`\`\n{{issue.code}}\n\`\`\`\n\n**Descrição:**\n{{issue.description}}\n\nVeja mais detalhes em: \`{{issue.url}}\`"

        # Define o filtro de issues para buscar no Codacy
        issues_filter=${ISSUES_FILTER}

        # Obtém as informações das issues do Codacy que correspondem ao filtro definido
        codacy_api_url="https://api.codacy.com/2.0/issues/search"
        response=$(curl -sS -X POST -u ${CODACY_USERNAME}:${CODACY_API_TOKEN} -H "Content-Type: application/json" -d '{"filters":'"${issues_filter}"'}' "${codacy_api_url}")

        # Obtém as issues do resultado da busca e cria uma nova issue no GitHub para cada uma
        issues=$(echo "$response" | jq -r '.results[] | @base64')
        github_api_url="https://api.github.com/repos/${GITHUB_REPO_OWNER}/${GITHUB_REPO_NAME}/issues"
        for issue in $issues; do
            # Decodifica o JSON da issue e define o título da issue
            issue_title="#$(echo "$issue" | base64 --decode | jq -r '.number') - [Codacy/$(echo "$issue" | base64 --decode | jq -r '.severity')] - $(echo "$issue" | base64 --decode | jq -r '.message')"

            # Define os parâmetros para criar uma nova issue no GitHub
            new_issue=$(echo "$issue" | base64 --decode | jq -r --arg issue_body_pattern "${issue_body_pattern}" '{"title":"'"${issue_title}"'","body":$issue_body_pattern}')

            # Cria a nova issue no GitHub
            response=$(curl -sS -X POST -u "${GITHUB_API_TOKEN}:" -H "Content-Type: application/json" -d "${new_issue}" "${github_api_url}")

            # Imprime o status da resposta HTTP
            echo "$response"
            done
